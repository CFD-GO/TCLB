<?R
 source("conf.R")
?>
//#define AddToObjective(x) objective += x
//real_t objective;
<?R for (g in rows(Globals)) if (! g$adjoint) { ?>
#define AddTo<?%s g$name ?>(x) <?%s g$name ?> += x;
real_t <?%s g$name ?>;<?R } ?>

typedef struct {float x,y; } float2;

<?R for (v in rows(Settings)) { ?>
//	real_t <?%s v$name ?>;
#define <?%s v$name ?> 0xFFFF<?%s formatC(v$index, width = 2, format = "d", flag = "0") ?> <?R
    } ?>
#ifdef CONST_SETTINGS
<?R for (v in rows(ZoneSettings)) if (! v$adjoint) { ?>
#define <?%s v$name ?>    0xFFCF<?%s formatC(v$index, width = 2, format = "d", flag = "0") ?>
#define <?%s v$name ?>_DT 0xFFDF<?%s formatC(v$index, width = 2, format = "d", flag = "0") ?><?R
    } ?>
#else
<?R for (v in rows(ZoneSettings)) if (! v$adjoint) { ?>
	real_t <?%s v$name ?>;
	real_t <?%s v$name ?>_DT; <?R
    } ?>
#endif // CONST_SETTINGS

#define NodeType 0xFFCCFFCC
//flag_t NodeType;


real_t X,Y,Z;

real_t fabs(real_t val) {
	if (val > 0) {
		return val;
	} else {
		return -val;
	}
}

