<?R 
	source("models.R")
	Models = get.models();
	destinations=c("CLB");
?>
# MODELS: 
#	<?%s paste(Models$name,collapse=", ") ?>

#######################################################################################################################

all: <?%s paste(Models$name,collapse=" ") ?> 

.PHONY: all clean dummy <?%s paste(Models$name,collapse="/kernel_stats_20 ") ?>


SOURCE_PLAN+=Global.cpp Lattice.cu vtkLattice.cpp vtkOutput.cpp cross.cu cuda.cu LatticeContainer.inc.cpp LatticeAccess.inc.cpp
SOURCE_PLAN+=Dynamics.c Dynamics_sp.c Solver.cpp Handlers.cpp pugixml.cpp Geometry.cpp def.cpp unit.cpp
SOURCE_PLAN+=ZoneSettings.cpp SyntheticTurbulence.cpp Sampler.cpp
SOURCE_PLAN+=main.cpp
SOURCE_PLAN+=Global.h gpu_anim.h LatticeContainer.h Lattice.h Region.h vtkLattice.h vtkOutput.h cross.h
SOURCE_PLAN+=gl_helper.h Dynamics.h Dynamics.hp types.h Consts.h Solver.h Handlers.h pugixml.hpp pugiconfig.hpp
SOURCE_PLAN+=Geometry.h def.h utils.h unit.h ZoneSettings.h SyntheticTurbulence.h Sampler.h spline.h
SOURCE_PLAN+=SUMMARY
SOURCE_PLAN+=conf.doxygen
SOURCE_ADJ =Dynamics_b.c ADTools.cu Dynamics_adj.c Dynamics_b.hp Dynamics_b.h types_b.h ADpre_.h ADpre__b.h
SOURCE_REST=makefile dep.mk
ADDITIONALS=README.md dictionary.h

SOURCE_PLAN+=Catalyst.cpp
SOURCE_PLAN+=Catalyst.h

ifdef CPU
	SOURCE_ALL=$(SOURCE_PLAN:.cu=.cpp)
else
	SOURCE_ALL=$(SOURCE_PLAN)
endif

AOUT=main

rm-files:
	@echo "  RM         ALL"
	@./tools/clear

rm:rm-files configure
	true

clean: <?%s paste(Models$name, "clean", sep="/", collapse=" ") ?>
	
$(MAKEHEADERS):tools/makeheaders.c
	gcc -o $@ $<


wiki/Models.md : src/Models.md.Rt <?%s paste("wiki/Model-", Models$name, ".md", sep="", collapse=" ") ?>
	@echo "  RT         $@ (model)"
	@$(RT) -q -f $< -I $(TOOLS),$(SRC) -w wiki/ -o $@ $(RTOPT) "MODELS=\"<?%s paste(Models$name,collapse=",")?>\"" || rm $@
	@$(INDENT) $@

wiki/% : src/%.Rt
	@echo "  RT         $@"
	@$(RT) -q -f $< -I $(TOOLS),$(SRC) -w wiki/ -o $@ $(RTOPT) || rm $@
	@$(INDENT) $@


travis : .travis.yml

.travis.yml : src/travis.yml.Rt src/*/conf.mk
	@echo "  RT         $@"
	@tools/RT -q -f $< -o $@ -I $(TOOLS),$(SRC)


###############################################################################
######       AUTO GENERATED CASES for RT                                 ######
###############################################################################

<?R
for (d in destinations) {
	for (i in 1:nrow(Models)) {
		m = Models$name[i];
		adjoint = Models$adjoint[i]
		dest = paste(d,"/",m,"/",sep="")
		src = "$(SOURCE_ALL)"
		if (adjoint) src = paste(src, "$(SOURCE_ADJ)")
		src_all = paste(src, "$(SOURCE_REST)")
		src = paste("$(addprefix ",dest,",",src,")",sep="");
		src_all = paste("$(addprefix ",dest,",",src_all,")",sep="");
		src_all = paste(dest,src_all)
		add = paste("$(addprefix ",d,"/,$(ADDITIONALS))",sep="")
		src_all = paste(src_all,add)
?>
<?%s m ?>:  | <?%s d ?>/<?%s m ?>

<?%s m ?>: <?%s d ?>/<?%s m ?> <?%s d ?>/<?%s m ?>/main
	@echo "  DONE       $@"

<?%s m ?>/source:  | <?%s d ?>/<?%s m ?>


<?%s m ?>/kernel_stats_20:
	ptxas -v --gpu-name=sm_20 <?%s d ?>/<?%s m ?>/cuda.ptx 

<?%s m ?>/source: <?%s d ?>/<?%s m ?> <?%s src_all ?>
	@echo "  DONE       $@"

<?%s m ?>/clean:  | <?%s d ?>/<?%s m ?>

<?%s m ?>/clean: <?%s d ?>/<?%s m ?> <?%s d ?>/<?%s m ?>/makefile
	@echo "  CLEAN      $@"
	@cd <?%s d ?>/<?%s m ?>; $(MAKE) clean

.PHONY: <?%s m ?>/clean


<?%s m ?>/vc: <?%s m ?>/source <?%s d ?>/<?%s m ?>/solver.vcproj
	@echo "  DONE       $@"

<?%s m ?>/summary: <?%s d ?>/<?%s m ?> <?%s d ?>/<?%s m ?>/SUMMARY
	@echo ""
	@echo "----------------------------------------"
	@echo "    Summary of model <?%s m ?>"
	@echo "----------------------------------------"
	@echo ""
	@cat <?%s d ?>/<?%s m ?>/SUMMARY	

<?%s m ?>/doc: <?%s m ?>/source
	@cd <?%s d ?>/<?%s m ?>; doxygen conf.doxygen
	@echo "  DONE       $@"

<?%s d ?>/<?%s m ?>/main:<?%s src_all ?>
	@cd <?%s d ?>/<?%s m ?>; $(MAKE)

<?%s d ?>/<?%s m ?> :
	mkdir -p $@

wiki/%-<?%s m ?>.md:$(SRC)/%.md.Rt $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  RT         $@ (model)"
	-@$(RT) -q -f $< -I $(TOOLS),$(SRC),$(SRC)/<?%s m ?> -w wiki/ -o $@ $(RTOPT)<?R if (adjoint) {?> $(RTOPT_ADJ)<?R }?> MODEL=\"<?%s m ?>\" || rm $@

# for model <?%s m ?> and destination <?%s d ?>

<?%s d ?>/<?%s m ?>/Dynamics_b.c <?%s d ?>/<?%s m ?>/Dynamics_b.h <?%s d ?>/<?%s m ?>/types_b.h <?%s d ?>/<?%s m ?>/ADpre_.h <?%s d ?>/<?%s m ?>/ADpre__b.h : <?%s d ?>/<?%s m ?>/tapenade.run

.INTERMEDIATE : tapenade.run

<?%s d ?>/<?%s m ?>/tapenade.run : tools/makeAD <?%s d ?>/<?%s m ?>/Dynamics.c <?%s d ?>/<?%s m ?>/ADpre.h <?%s d ?>/<?%s m ?>/ADpre_b.h <?%s d ?>/<?%s m ?>/Dynamics.h <?%s d ?>/<?%s m ?>/Consts.h <?%s d ?>/<?%s m ?>/types.h <?%s d ?>/<?%s m ?>/ADset.sh <?%s d ?>/<?%s m ?>/ADpost.sed
	@echo "  TAPENADE   $<"
	@(cd <?%s d ?>/<?%s m ?>; ../../tools/makeAD)

<?%s d ?>/<?%s m ?>/dep.mk:tools/dep.R <?%s src ?>
	@echo "  AUTO-DEP   $@"
	@cd <?%s d ?>/<?%s m ?>; $(RS) ../../$<

<?%s d ?>/<?%s m ?>/%:$(SRC)/%.Rt $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  RT         $@"
	@$(RT) -q -f $< -I $(TOOLS),$(SRC),$(SRC)/<?%s m ?> -w <?%s d ?>/<?%s m ?>/ -o $@ $(RTOPT)<?R if (adjoint) {?> $(RTOPT_ADJ)<?R }?> MODEL=\"<?%s m ?>\" || mv $@ $@~
	@$(INDENT) $@

<?%s d ?>/<?%s m ?>/%.cpp:$(SRC)/%.cu.Rt $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  RT         $@"
	@$(RT) -q -f $< -I $(TOOLS),$(SRC),$(SRC)/<?%s m ?> -w <?%s d ?>/<?%s m ?>/ -o $@ $(RTOPT)<?R if (adjoint) {?> $(RTOPT_ADJ)<?R }?> MODEL=\"<?%s m ?>\" || mv $@ $@~
	@$(INDENT) $@

<?%s d ?>/<?%s m ?>/%.cpp:$(SRC)/%.cu $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  CP         $@"
	@$(CP) $< $@

<?%s d ?>/<?%s m ?>/%:$(SRC)/<?%s m ?>/%.Rt $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  RT         $@ (model)"
	@$(RT) -q -p -f $< -I $(TOOLS),$(SRC),$(SRC)/<?%s m ?> -w <?%s d ?>/<?%s m ?>/ -o $@ $(RTOPT)<?R if (adjoint) {?> $(RTOPT_ADJ)<?R }?> MODEL=\"<?%s m ?>\" || rm $@
	@$(INDENT) $@

<?%s d ?>/<?%s m ?>/%.code:$(SRC)/<?%s m ?>/%.Rt $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  RT         $@ (model)"
	@$(RT) -q -c -f $< -I $(TOOLS),$(SRC),$(SRC)/<?%s m ?> -w <?%s d ?>/<?%s m ?>/ -o $@ $(RTOPT)<?R if (adjoint) {?> $(RTOPT_ADJ)<?R }?> MODEL=\"<?%s m ?>\" || rm $@
	@$(INDENT) $@

<?%s d ?>/<?%s m ?>/%:$(SRC)/<?%s m ?>/%
	@echo "  CP         $@ (model)"
	@$(CP) $< $@

<?%s d ?>/<?%s m ?>/%:$(SRC)/%
	@echo "  CP         $@"
	@$(CP) $< $@

<?R } ?>

#configure:$(SRC)/configure.ac
#	@echo "  AUTOCONF   $@"
#	@autoconf -o $@ $< && rm -r autom4te.cache 2>/dev/null

<?%s d ?>/%:$(SRC)/%
	@echo "  CP         $@"
	@$(CP) $< $@

<?%s d ?>/%:$(SRC)/%.Rt
	@echo "  RT         $@"
	@$(RT) -q -f $< -I $(TOOLS) -w $(SRC)/ -o $@ $(RTOPT) || rm $@
	@$(INDENT) $@

<?R } ?>



%.hp:%.c $(MAKEHEADERS)
	@echo "  MKHEADERS  $<"
	@$(CP) $< $<.cpp; $(MAKEHEADERS) $<.cpp && sed 's/extern//' $<.hpp > $@
	@rm $<.cpp $<.hpp

%.hp:%.cpp $(MAKEHEADERS)
	@echo "  MKHEADERS  $<"
	@$(CP) $< $<.cpp; $(MAKEHEADERS) $<.cpp && sed 's/extern//' $<.hpp > $@
	@rm $<.cpp $<.hpp

%_sp.c:%.c
	@echo "  SP-CONST   $@"
	@cat $< | sed -r 's/[-+]?[0-9]+\.[0-9]*([eE][-+]?[0-9]+)?/&f/g' > $@




