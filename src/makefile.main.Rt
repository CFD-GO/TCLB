<?R 
	l = dir(path="src");
	d=sapply(paste("src",l,sep="/"),function(x){file.info(x)$isdir});
	models=l[d]
	rm(l,d) 
	destinations=c("standalone","package/src");
?>
# MODELS: 
#	<?%s paste(models,collapse=", ") ?>

ADJOINT=0        # calculate adjoint: 1-on, 0-off
GRAPHICS=0       # GLUT graphics: 1-on, 0-off
GRID3D=0         # use 3D block grid (only avaliable on capability 2.x): 1-on, 0-off
ARCH=sm_11       # CUDA architecture: sm_10 for capability 1.0, sm_13 for capability 1.3 etc.
DOUBLE=0         # precision: 1-double, 0-float


#######################################################################################################################

all: <?%s paste(models,collapse=" ") ?>

.PHONY: all clean dummy

makefile:src/makefile.main.Rt src/*
	tools/RT -f $< -o $@

#Rpackage : source package/configure
#	R CMD build package
	
#package/configure:package/configure.ac
#	@echo "AUTOCONF     $@"
#	@cd package; autoconf

RT = tools/RT
ADMOD = tools/ADmod.R
MAKEHEADERS = tools/makeheaders

SRC=src

#ifeq '$(strip $(STANDALONE))' '1'
 DEST=standalone
 ADDITIONALS=makefile model README.md
 SOURCE_CU+=main.cu
 HEADERS_H+=DataLine.h
#else
# DEST=package/src
# ADDITIONALS=package/src/Makefile.in package/data/LB.RData
#endif

SOURCE_CU+=Global.cu Lattice.cu vtkLattice.cu vtkOutput.cu cross.cu cuda.cu LatticeContainer.cu Dynamics.c inter.cpp Solver.cpp pugixml.cpp Geometry.cu def.cpp unit.cpp
SOURCE_R=conf.R Dynamics.R
SOURCE=$(addprefix $(DEST)/,$(SOURCE_CU))
HEADERS_H+=Global.h gpu_anim.h LatticeContainer.h Lattice.h Node.h Region.h vtkLattice.h vtkOutput.h cross.h gl_helper.h Dynamics.h Dynamics.hp types.h Node_types.h Solver.h pugixml.hpp pugiconfig.hpp Geometry.h def.h utils.h unit.h
HEADERS=$(addprefix $(DEST)/,$(HEADERS_H))

ALL_FILES=$(SOURCE_CU) $(HEADERS_H) $(ADDITIONALS)
DEST_FILES=$(addprefix $(DEST)/,$(ALL_FILES))

AOUT=main

CC=nvcc
CCTXT=NVCC

RTOPT=

ifdef MODEL
 RTOPT+=MODEL=\"$(strip $(MODEL))\"
endif

ifdef ADJOINT
 RTOPT+=ADJOINT=$(strip $(ADJOINT))
endif

ifdef DOUBLE
 RTOPT+=DOUBLE=$(strip $(DOUBLE))
endif

ifdef GRAPHICS
 RTOPT+=GRAPHICS=$(strip $(GRAPHICS))
endif

ifeq '$(strip $(ADJOINT))' '1'
 OPT+=-D ADJOINT
 SOURCE_CU+=Dynamics_b.c ADTools.cu Dynamics_adj.c
 HEADERS_H+=Dynamics_b.hp Dynamics_b.h types_b.h ADpre_.h Dynamics_adj.hp ADpre__b.h
endif

ifeq '$(strip $(GRAPHICS))' '1'
 OPT+=-D GRAPHICS -lglut
endif

ifeq '$(strip $(DIRECT_MEM))' '1'
 OPT+=-D DIRECT_MEM
endif

ifdef ARCH
 OPT+=-arch $(strip $(ARCH))
endif

ifeq '$(strip $(GRID3D))' '1'
 OPT+=-D GRID_3D
endif

ifeq '$(strip $(DOUBLE))' '1'
 OPT+=-D CALC_DOUBLE_PRECISION
endif

MODELPATH=$(strip $(MODEL))

.PRECIOUS:$(DEST_FILES)

source:Dynamics.R conf.R $(DEST_FILES)
	@cd $(DEST); git add $(ALL_FILES)


package/data/LB.RData: conf.R Dynamics.R
	@echo "MAKEDATA     $@"
	@Rscript tools/makeData.R

clear:
	@echo "  RM         ALL"
	@rm `ls | grep -v -e ^makefile$$ -e .mk$$` 2>/dev/null; true

$(DEST)/Dynamics_b.c $(DEST)/Dynamics_b.h $(DEST)/types_b.h $(DEST)/ADpre_.h $(DEST)/ADpre__b.h : tapenade.run

.INTERMEDIATE : tapenade.run

tapenade.run : $(DEST)/Dynamics.c $(DEST)/ADpre.h $(DEST)/ADpre_b.h $(DEST)/Dynamics.h $(DEST)/Node_types.h $(DEST)/types.h $(DEST)/ADset.sh
	@echo "  TAPENADE   $<"
	@(cd standalone; ../tools/makeAD)

###############################################################################
######       AUTO GENERATED CASES for RT                                 ######
###############################################################################

<?R for (m in models) { ?>
<?%s m ?>:  | standalone/<?%s m ?>

<?%s m ?>: standalone/<?%s m ?> standalone/<?%s m ?>/main
	@echo "  DONE       $@"
standalone/<?%s m ?>/main:standalone/<?%s m ?> $(addprefix standalone/<?%s m ?>/,$(ALL_FILES))
	@cd standalone/<?%s m ?>; $(MAKE)

standalone/<?%s m ?> :
	mkdir -p $@
<?R } ?>


<?R for (m in models) { for (d in destinations) {?>
# for model <?%s m ?> and destination <?%s d ?>

<?%s d ?>/<?%s m ?>/%:$(SRC)/%.Rt $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  RT         $@"
	@$(RT) -q -f $< -I $(SRC),$(SRC)/<?%s m ?> -o $@ $(RTOPT) MODEL=\"<?%s m ?>\" || rm $@

<?%s d ?>/<?%s m ?>/%:$(SRC)/<?%s m ?>/%.Rt $(SRC)/<?%s m ?>/Dynamics.R $(SRC)/conf.R
	@echo "  RT         $@ (model)"
	@$(RT) -q -f $< -I $(SRC),$(SRC)/<?%s m ?> -o $@ $(RTOPT) MODEL=\"<?%s m ?>\" || rm $@

<?%s d ?>/<?%s m ?>/%:$(SRC)/<?%s m ?>/%
	@echo "  CP         $@ (model)"
	@cp $< $@

<?%s d ?>/<?%s m ?>/%:$(SRC)/%
	@echo "  CP         $@"
	@cp $< $@
<?R }} ?>



%.hp:%.c
	@echo "MAKEHEADERS  $<"
	@cp $< $<.cpp; $(MAKEHEADERS) $<.cpp && sed 's/extern//' $<.hpp > $@
	@rm $<.cpp $<.hpp

%.hp:%.cpp
	@echo "MAKEHEADERS  $<"
	@cp $< $<.cpp; $(MAKEHEADERS) $<.cpp && sed 's/extern//' $<.hpp > $@
	@rm $<.cpp $<.hpp

