<?R source("conf.R"); hash_header(); ?>

MODEL=<?%s MODEL ?>       # model (directory) to use
ADJOINT=<?%s ADJOINT ?>   # calculate adjoint: 1-on, 0-off
GRAPHICS=0 # GLUT graphics: 1-on, 0-off
DOUBLE=0     # precision: 1-double, 0-float
GRID3D=0                  # use 3D block grid (only avaliable on capability 2.x): 1-on, 0-off
ARCH=sm_11                # CUDA architecture: sm_10 for capability 1.0, sm_13 for capability 
#CPU=1


all:main
	@echo "  DONE       $^"

include ../config.mk
include dep.mk

<?R
	h = dir("../../src/Handlers","[.](cpp)(|.Rt)$")
	h = sub("[.]cpp(|.Rt)",".o",h)
	h = paste("Handlers",h,sep="/");
?>
OBJ+=<?R cat(h,sep=" ") ?>


#../config.mk:../config.mk.in ../configure
#	cd ..; ./configure

../config.mk:
	@echo "!---------------------------!"
	@echo "!  Run configure            !"
	@echo "!---------------------------!"
	@exit 1

.PRECIOUS:$(SOURCE) $(HEADERS)

source:Dynamics.R conf.R $(SOURCE) $(HEADERS)

ifdef CPU

%.cpp:%.cu
	cp $< $@

%.o:%.cpp
	@echo "  G++        $<"
	@g++ -c $< -o $@ $(CPP_OPT) $(OPT)

main:main.o $(OBJ)
	@echo "  LINKING    $@"
	@mpic++ $^ -o $@ $(LD_OPT)

else

%.o:%.cpp
	@echo "  G++        $<"
	@g++ -c $< -o $@ $(CPP_OPT) $(OPT)

%.o:%.cu
	@echo "  NVCC       $<"
	@$(NVCC) --disable-warnings -c $< -o $@ $(OPT) $(NV_OPT)

main:main.o $(OBJ)
	@echo "  LINKING    $@ (nvcc)"
	@mpic++ $^  -lcudart -o $@ $(LD_OPT)
#	@$(NVCC) $^ -o $@ $(LD_OPT) $(NV_OPT) -lcudart

endif

clean:
	@echo "  RM         ALL"
	@rm `find -name '*.o'` main 2>/dev/null; true
