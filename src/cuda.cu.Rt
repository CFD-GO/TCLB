<?R
        source("conf.R")
	c_header()
?>

#ifdef ADJOINT
	#include "types_b.h"
#endif

#include "cross.h"
#include "Global.h"

class Node;
class Node_Globs;
#include "LatticeContainer.h"
//class LatticeContainer;
CudaDeviceFunction CudaConstantMemory LatticeContainer constContainer;

#ifdef ADJOINT
	#include "ADTools.cu"
#endif

#include "Node_types.h"

<?R
        for (i in 1:nrow(Settings)) {
                v = Settings[i,]; ?>
CudaDeviceFunction CudaConstantMemory real_t <?%s v$name ?> = 0.0; <?R
	} ?>
CudaConstantMemory real_t c_sq = 1.0/3.;


#define NODE_H

<?R
	for (tp in rows(Dispatch)) {
	cat("\n")
	ifdef(tp$adjoint)
	suff=tp$suffix
	for (g in rows(Globals)) if ((! g$adjoint) || (tp$adjoint)) {
		if (tp$globals) { ?>
			#define AddTo<?%s g$name ?>(x) <?%s g$name ?> = <?%s g$name ?> + x <?R
		} else { ?>
			#define AddTo<?%s g$name ?>(x) <?R
		}
	} ?>
struct Node<?%s suff ?> {
	int x,y,z;
	<?R
		if (tp$globals) {
			for (g in rows(Globals)) { ?>
				real_t <?%s g$name ?>; <?R
			}
		}
	?>
	CudaDeviceFunction void inline Pre() { <?R
		if (tp$globals) { ?>
			<?R
				for (g in rows(Globals)) { ?>
					<?%s g$name ?> = 0.0; <?R
				}
		} ?>
	}
	CudaDeviceFunction void inline Glob() { <?R
		if (tp$globals) {
			i=0
			for (g in rows(Globals)) if ((! g$adjoint) || (tp$adjoint)) { ?>
				atomicSum(&constContainer.Globals[<?%d i ?>], <?%s g$name ?>); <?R
				i = i + 1;
			}
		} ?>
	}
	<?R
		if (! tp$adjoint) { ?>
			#include "Dynamics.h" <?R
		} ?>
#ifdef CALC_DOUBLE_PRECISION
	#include "Dynamics.c"
#else
	#include "Dynamics_sp.c"
#endif
	<?R
		if (tp$adjoint) { ?>
			#include "Dynamics_b.c"
			#include "Dynamics_adj.c" <?R
		}
	?>
	CudaDeviceFunction inline void RunElement() { <?R
		if (tp$adjoint) { ?>
			constContainer.pull(*this);
			constContainer.pop_adj(*this);
			Run_b();
			constContainer.push_adj(*this); <?R
		} else { ?>
		        constContainer.pop(*this); 
			Run();
			constContainer.push(*this); <?R
		} ?>
	}
}; <?R
	for (g in rows(Globals)) { ?>
		#undef AddTo<?%s g$name ?><?R
	}
} 
cat("\n")
ifdef()
?>

//#include "LatticeContainer.h"
#include "LatticeContainer.cu"
