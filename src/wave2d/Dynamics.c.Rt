<?R
	source("conf.R") ;
	c_header();
?>

CudaDeviceFunction real_t getH(){
	return h;
}
    
CudaDeviceFunction real_t getW(){
	return w;
}

CudaDeviceFunction void Run() {
	WaveEquation();
	h1=h2=h3=h4=h;
}

CudaDeviceFunction void Init() {
	if (NodeType == NODE_Wall) {
		w = 0;
	} else {
		w = 1;
	}
	if (NodeType == NODE_Solid) {
		h = SolidH;
	} else {
		h = 0;
	}	
	u=0;
	h1=h2=h3=h4=h;
}

CudaDeviceFunction float2 Color() {
        float2 ret;
        ret.x = h;
	ret.y = w;
        return ret;
}

CudaDeviceFunction void WaveEquation() {
	real_t du =  h1 + h2 + h3 + h4 - 4*h;
	if (NodeType == NODE_Obj1) AddToTotalDiff(du*du);
	u += du*WaveK;
//	u *= w;
	h += u;
	h *= w;
	u *= Loss;
}


