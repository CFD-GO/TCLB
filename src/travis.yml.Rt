<?R 
	source("models.R")
	Models = get.models()
	Models$test[! Models$git] = "no test" # Do not test not-commited models
	Models$test[Models$adjoint] = "no test" # Do not test adjoint models (for now)

?>
language: c

git:
    submodules: false

env:
  global:
    - CUDA=6.5-14
  matrix: <?R
sel = Models$test != "no test"
for (m in Models$name[sel]) { ?>
    - MODEL=<?%s m ?> <?R
} ?>
<?R
sel = Models$test == "can fail"
if (any(sel)) { ?>
matrix:
  allow_failures: <?R
 for (m in Models$name[sel]) { ?>
    - MODEL=<?%s m ?> <?R
 }
}
?>

before_install:
    - sudo tools/install.sh cuda $CUDA
    - sudo tools/install.sh r
    - sudo tools/install.sh openmpi
    - tools/install.sh rdep
    - tools/install.sh rpython
    - gem install coveralls-lcov
    - tools/install.sh submodules
    - sudo tools/install.sh coveralls
    - export CUDA_HOME=/usr/local/cuda-${CUDA%%-*}
    - export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
    - export PATH=${CUDA_HOME}/bin:${PATH}

install:
    - nvcc --version

script:
    - make configure
    - ./configure --enable-double --with-cuda-arch=sm_20 --enable-marklines
    - make $MODEL/source
    - make $MODEL
    - ./configure 
    - make $MODEL/clean
    - ./configure --enable-double --disable-cuda --enable-marklines --enable-marklines --enable-coverage
    - make $MODEL
    - tools/tests.sh $MODEL

after_success:
    - tools/coveralls.sh

after_failure:
    - dmesg
