<?R 
	f = pipe("git ls-files | sed -n 's|^src/\\([^/]*\\)/conf.mk$|\\1|gp'")
	models= readLines(f)
	close(f)
	
	Models = do.call(rbind, lapply(models,function (m) {
		pt = paste("src",m,sep="/");
		cf = paste("src",m,"conf.mk",sep="/");
		if (file.exists(cf)) {
			source(cf);
		} else {
			ADJOINT=0;
			return(NULL)
		}
		data.frame(name=m, adjoint=(ADJOINT != 0), path=pt)
	}))
	
	rm(f) 
?>
language: c

git:
    submodules: false

env:
  global:
    - CUDA=6.5-14
  matrix: <?R
for (m in Models$name) { ?>
    - MODEL=<?%s m ?> <?R
}
?>

before_install:
    - sudo tools/install.sh cuda $CUDA
    - sudo tools/install.sh r
    - sudo tools/install.sh openmpi
    - tools/install.sh rdep
    - export CUDA_HOME=/usr/local/cuda-${CUDA%%-*}
    - export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
    - export PATH=${CUDA_HOME}/bin:${PATH}

install:
    - nvcc --version

script:
    - make configure
    - ./configure --enable-double --with-cuda-arch=sm_20
    - make $MODEL/source
    - make $MODEL

after_failure:
    - dmesg
