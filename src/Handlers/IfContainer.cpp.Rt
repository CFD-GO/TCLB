#include "IfContainer.h"
<?R
#include "../HandlerFactory.h"
source("conf.R")
	c_header()
?>


std::string IfContainer::xmlname = "EvalIf";
#include "../HandlerFactory.h"

int IfContainer::Init () {
		GenericAction::Init();
        pugi::xml_attribute present = node.attribute("opt_present"); 
        pugi::xml_attribute missing = node.attribute("opt_missing"); 
        bool proceed = false;
        if (present){
        <?R 
        for (v in ls(Options)) {
            if(Options[[v]]){
                ?> 
                if (strcmp("<?R cat(v) ?>", present.value() ) == 0) {proceed = true;}; 
                <?R
            }
        }    
        ?>
          
        } else if (missing){
            proceed = true;
         <?R 
        for (v in ls(Options)) {
            if(Options[[v]]){
                ?> 
                if (strcmp("<?R cat(v) ?>", present.value() ) == 0) {proceed = false;}; 
                <?R
            }
        }    
        ?>
   
        }
        if (proceed) {
            debug1("EvalIf - proceed\n");
		    return  GenericAction::ExecuteInternal();
        } else {
            debug1("EvalIf - skipped\n");
            return 0;
        }
}


int IfContainer::Finish () {
		GenericAction::Unstack();
		return GenericAction::Finish();
	}


// Register the handler (basing on xmlname) in the Handler Factory
template class HandlerFactory::Register< GenericAsk< IfContainer > >;
