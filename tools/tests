#!/bin/bash

URL=git@github.com:llaniewski/TCLB.git

RES="test_report"

TOOLS=tools
REPORT=${RES}/report.html


function mytest {
	NAME=$1
	shift
	COMMAND=$@
	echo -n "$NAME ... "
#	$COMMAND 2>&1 | ${TOOLS}/tth ${RES}/${NAME}.html
#	${TOOLS}/tth ${RES}/${NAME}.html $COMMAND
	if ! ${TOOLS}/tth ${RES}/${NAME}.html $COMMAND
	then
		echo "FAIL"
		echo "<td bgcolor=\"#FF0000\" align=\"center\"><a href=\"${NAME}.html\" style=\"display:block;text-decoration: none;\">FAIL</a></td>" >> ${REPORT}
		return 1
	else
		echo "OK"
		echo "<td bgcolor=\"#00FF00\" align=\"center\"><a href=\"${NAME}.html\" style=\"display:block;text-decoration: none;\">OK</a></td>" >> ${REPORT}
		return 0
	fi
}

function norun {
	echo "<td bgcolor=\"#FFFFFF\">---</td>" >> ${REPORT}
}

function begin_table {
	echo "<table border=1>" >> ${REPORT}
}

function end_table {
	echo "</table>" >> ${REPORT}
}

function begin_row {
	echo "<tr>" >> ${REPORT}
}

function end_row {
	echo "</tr>" >> ${REPORT}
}

function element {
	echo "<td>$@</td>" >> ${REPORT}
}

function bigelement {
	COL=$1
	shift
	ROW=$1
	shift
	echo "<td colspan=\"$COL\" rowspan=\"$ROW\">$@</td>" >> ${REPORT}
}

function set_conf {
	CONF_TAG=$1
	CONF=""
	case "$CONF_TAG" in
	cpu-*)
		CONF="$CONF --disable-cuda"
		CONF_NAME="CPU"
		;;
	gpu-11-*)
		CONF="$CONF --with-cuda-arch=sm_11"
		CONF_NAME="GPU (CC 1.1)"
		;;
	gpu-13-*)
		CONF="$CONF --with-cuda-arch=sm_13"
		CONF_NAME="GPU (CC 1.3)"
		;;
	gpu-20-*)
		CONF="$CONF --with-cuda-arch=sm_20"
		CONF_NAME="GPU (CC 2.0)"
		;;
	gpu-30-*)
		CONF="$CONF --with-cuda-arch=sm_30"
		CONF_NAME="GPU (CC 3.0)"
		;;
	esac
	case "$CONF_TAG" in
	*-dp)
		CONF="$CONF --enable-double"
		CONF_NAME="$CONF_NAME Double precition"
		;;
	*-sp)
		CONF_NAME="$CONF_NAME Single precition"
		;;
	esac
	echo "Configuration: $CONF_NAME"
	echo "             : $CONF"
}

echo "" >${REPORT}
echo "<html><body>" >> ${REPORT}

rm -fr ${RES}
mkdir ${RES}

begin_table

begin_row
element Action
element Status
end_row

begin_row
element make configure
mytest configure.make make configure
end_row

end_table

MODELS=$(ls src/*/Dynamics.R | cut -f 2 -d '/')
#MODELS=d2q9
BASE_CONFS="gpu-11-sp gpu-13-sp gpu-20-dp gpu-30-dp cpu-sp cpu-dp"

#CONFS=gpu-sp

CONFS=""
begin_table
element Configuration
element Options
element Status
for CONF_TAG in $BASE_CONFS
do
	set_conf $CONF_TAG
	begin_row 
	element $CONF_NAME
	element $CONF
	if mytest $CONF_TAG.configure ./configure $CONF
	then
		CONFS="$CONFS $CONF_TAG"
	fi
	end_row
done
end_table

begin_table
begin_row 
bigelement 1 2 Model
bigelement 1 2 Summary
bigelement 1 2 Source
for CONF_TAG in $CONFS
do
	set_conf $CONF_TAG
	bigelement 2 1 $CONF_NAME
done
end_row

begin_row 
for CONF_TAG in $CONFS
do
	element conf
	element make
done
end_row


for MODEL in $MODELS
do
	begin_row
	element ${MODEL}
	mkdir ${RES}/${MODEL}
	if mytest ${MODEL}/summary make ${MODEL}/summary
	then
		if mytest ${MODEL}/source make -j 6 ${MODEL}/source
		then
			for CONF_TAG in $CONFS
			do
				set_conf $CONF_TAG
				mytest $CONF_TAG.configure ./configure $CONF
				mytest ${MODEL}/$CONF_TAG.all make -j 6 ${MODEL}
			done
			NORUNS=""
		else
			NORUNS="$CONFS $CONFS"
		fi
	else
		NORUNS="source $CONFS $CONFS"
	fi
	for i in $NORUNS; do norun; done
	end_row
done
end_table

echo "</body></html>" >> ${REPORT}
